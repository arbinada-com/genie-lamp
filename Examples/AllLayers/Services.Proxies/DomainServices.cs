// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------




[System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org/")]
public interface IPersistenceService {
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceService/CreateUnitOfWork", ReplyAction="http://tempuri.org/IPersistenceService/CreateUnitOfWorkResponse")]
    Arbinada.GenieLamp.Warehouse.Services.UnitOfWorkProxy CreateUnitOfWork();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersistenceService/Commit", ReplyAction="http://tempuri.org/IPersistenceService/CommitResponse")]
    Arbinada.GenieLamp.Warehouse.Services.CommitResult Commit(Arbinada.GenieLamp.Warehouse.Services.UnitOfWorkProxy unitOfWork);
}

public interface IPersistenceServiceChannel : IPersistenceService, System.ServiceModel.IClientChannel {
}

public class PersistenceServiceClient : System.ServiceModel.ClientBase<IPersistenceService>, IPersistenceService {
    
    public PersistenceServiceClient() {
    }
    
    public PersistenceServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName) {
    }
    
    public PersistenceServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public PersistenceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public PersistenceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpoint) : 
            base(binding, endpoint) {
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.UnitOfWorkProxy CreateUnitOfWork() {
        return base.Channel.CreateUnitOfWork();
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.CommitResult Commit(Arbinada.GenieLamp.Warehouse.Services.UnitOfWorkProxy unitOfWork) {
        return base.Channel.Commit(unitOfWork);
    }
}


[System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org/")]
public interface IProductTypeService {
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeService/CreateProductType", ReplyAction="http://tempuri.org/IProductTypeService/CreateProductTypeResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.ProductTypeProxy CreateProductType();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeService/GetProductTypeById", ReplyAction="http://tempuri.org/IProductTypeService/GetProductTypeByIdResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.ProductTypeProxy GetProductTypeById(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductTypeService/GetProductTypeByCode", ReplyAction="http://tempuri.org/IProductTypeService/GetProductTypeByCodeResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.ProductTypeProxy GetProductTypeByCode(string code);
}

public interface IProductTypeServiceChannel : IProductTypeService, System.ServiceModel.IClientChannel {
}

public class ProductTypeServiceClient : System.ServiceModel.ClientBase<IProductTypeService>, IProductTypeService {
    
    public ProductTypeServiceClient() {
    }
    
    public ProductTypeServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName) {
    }
    
    public ProductTypeServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public ProductTypeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public ProductTypeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpoint) : 
            base(binding, endpoint) {
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.ProductTypeProxy CreateProductType() {
        return base.Channel.CreateProductType();
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.ProductTypeProxy GetProductTypeById(int id) {
        return base.Channel.GetProductTypeById(id);
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.ProductTypeProxy GetProductTypeByCode(string code) {
        return base.Channel.GetProductTypeByCode(code);
    }
}


[System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org/")]
public interface IProductService {
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/CreateProduct", ReplyAction="http://tempuri.org/IProductService/CreateProductResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.ProductProxy CreateProduct();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductById", ReplyAction="http://tempuri.org/IProductService/GetProductByIdResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.ProductProxy GetProductById(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductByRefCode", ReplyAction="http://tempuri.org/IProductService/GetProductByRefCodeResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.ProductProxy GetProductByRefCode(string refCode);
}

public interface IProductServiceChannel : IProductService, System.ServiceModel.IClientChannel {
}

public class ProductServiceClient : System.ServiceModel.ClientBase<IProductService>, IProductService {
    
    public ProductServiceClient() {
    }
    
    public ProductServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName) {
    }
    
    public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpoint) : 
            base(binding, endpoint) {
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.ProductProxy CreateProduct() {
        return base.Channel.CreateProduct();
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.ProductProxy GetProductById(int id) {
        return base.Channel.GetProductById(id);
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.ProductProxy GetProductByRefCode(string refCode) {
        return base.Channel.GetProductByRefCode(refCode);
    }
}


[System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org/")]
public interface IStoreService {
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/CreateStore", ReplyAction="http://tempuri.org/IStoreService/CreateStoreResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.StoreProxy CreateStore();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetStoreById", ReplyAction="http://tempuri.org/IStoreService/GetStoreByIdResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.StoreProxy GetStoreById(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreService/GetStoreByCode", ReplyAction="http://tempuri.org/IStoreService/GetStoreByCodeResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.StoreProxy GetStoreByCode(string code);
}

public interface IStoreServiceChannel : IStoreService, System.ServiceModel.IClientChannel {
}

public class StoreServiceClient : System.ServiceModel.ClientBase<IStoreService>, IStoreService {
    
    public StoreServiceClient() {
    }
    
    public StoreServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName) {
    }
    
    public StoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public StoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public StoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpoint) : 
            base(binding, endpoint) {
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.StoreProxy CreateStore() {
        return base.Channel.CreateStore();
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.StoreProxy GetStoreById(int id) {
        return base.Channel.GetStoreById(id);
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.StoreProxy GetStoreByCode(string code) {
        return base.Channel.GetStoreByCode(code);
    }
}


[System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org/")]
public interface IContractorService {
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorService/CreateContractor", ReplyAction="http://tempuri.org/IContractorService/CreateContractorResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.ContractorProxy CreateContractor();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorService/GetContractorById", ReplyAction="http://tempuri.org/IContractorService/GetContractorByIdResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.ContractorProxy GetContractorById(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorService/GetContractorByName", ReplyAction="http://tempuri.org/IContractorService/GetContractorByNameResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.ContractorProxy GetContractorByName(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractorService/GetContractorByPhone", ReplyAction="http://tempuri.org/IContractorService/GetContractorByPhoneResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.ContractorProxy GetContractorByPhone(string phone);
}

public interface IContractorServiceChannel : IContractorService, System.ServiceModel.IClientChannel {
}

public class ContractorServiceClient : System.ServiceModel.ClientBase<IContractorService>, IContractorService {
    
    public ContractorServiceClient() {
    }
    
    public ContractorServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName) {
    }
    
    public ContractorServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public ContractorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public ContractorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpoint) : 
            base(binding, endpoint) {
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.ContractorProxy CreateContractor() {
        return base.Channel.CreateContractor();
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.ContractorProxy GetContractorById(int id) {
        return base.Channel.GetContractorById(id);
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.ContractorProxy GetContractorByName(string name) {
        return base.Channel.GetContractorByName(name);
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.ContractorProxy GetContractorByPhone(string phone) {
        return base.Channel.GetContractorByPhone(phone);
    }
}


[System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org/")]
public interface IPartnerService {
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerService/CreatePartner", ReplyAction="http://tempuri.org/IPartnerService/CreatePartnerResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.PartnerProxy CreatePartner();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPartnerService/GetPartnerById", ReplyAction="http://tempuri.org/IPartnerService/GetPartnerByIdResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.PartnerProxy GetPartnerById(int id);
}

public interface IPartnerServiceChannel : IPartnerService, System.ServiceModel.IClientChannel {
}

public class PartnerServiceClient : System.ServiceModel.ClientBase<IPartnerService>, IPartnerService {
    
    public PartnerServiceClient() {
    }
    
    public PartnerServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName) {
    }
    
    public PartnerServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public PartnerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public PartnerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpoint) : 
            base(binding, endpoint) {
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.PartnerProxy CreatePartner() {
        return base.Channel.CreatePartner();
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.PartnerProxy GetPartnerById(int id) {
        return base.Channel.GetPartnerById(id);
    }
}


[System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org/")]
public interface IStoreTransactionService {
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreTransactionService/CreateStoreTransaction", ReplyAction="http://tempuri.org/IStoreTransactionService/CreateStoreTransactionResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.StoreTransactionProxy CreateStoreTransaction();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStoreTransactionService/GetStoreTransactionById", ReplyAction="http://tempuri.org/IStoreTransactionService/GetStoreTransactionByIdResponse")]
    Arbinada.GenieLamp.Warehouse.Services.Warehouse.StoreTransactionProxy GetStoreTransactionById(int id);
}

public interface IStoreTransactionServiceChannel : IStoreTransactionService, System.ServiceModel.IClientChannel {
}

public class StoreTransactionServiceClient : System.ServiceModel.ClientBase<IStoreTransactionService>, IStoreTransactionService {
    
    public StoreTransactionServiceClient() {
    }
    
    public StoreTransactionServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName) {
    }
    
    public StoreTransactionServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public StoreTransactionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress) {
    }
    
    public StoreTransactionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress endpoint) : 
            base(binding, endpoint) {
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.StoreTransactionProxy CreateStoreTransaction() {
        return base.Channel.CreateStoreTransaction();
    }
    
    public Arbinada.GenieLamp.Warehouse.Services.Warehouse.StoreTransactionProxy GetStoreTransactionById(int id) {
        return base.Channel.GetStoreTransactionById(id);
    }
}
